<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"
   "http://www.w3.org/TR/html4/strict.dtd">
<HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html;charset=UTF-8">
<TITLE>Python Syntax Highlighter for adam.szieberth.hu</TITLE>
<STYLE>
a {
color: #b548c9;
position: relative;
text-decoration: none;
}
a:hover {
border-bottom: 2px solid #b548c9;
}
body {
  background-color: #000000;
  color: #ffffff;
}
pre {
display: inherit;
font-family: monospace;
font-size: large;
}
.highlight .hll { background-color: #222222 }
.highlight  { background: #000000; color: #cccccc }
.highlight .c { color: #000080 } /* Comment */
.highlight .err { color: #cccccc; border: 1px solid #FF0000 } /* Error */
.highlight .esc { color: #cccccc } /* Escape */
.highlight .g { color: #cccccc } /* Generic */
.highlight .k { color: #cdcd00 } /* Keyword */
.highlight .l { color: #cccccc } /* Literal */
.highlight .n { color: #cccccc } /* Name */
.highlight .o { color: #3399cc } /* Operator */
.highlight .x { color: #cccccc } /* Other */
.highlight .p { color: #cccccc } /* Punctuation */
.highlight .ch { color: #000080 } /* Comment.Hashbang */
.highlight .cm { color: #000080 } /* Comment.Multiline */
.highlight .cp { color: #000080 } /* Comment.Preproc */
.highlight .cpf { color: #000080 } /* Comment.PreprocFile */
.highlight .c1 { color: #000080 } /* Comment.Single */
.highlight .cs { color: #cd0000; font-weight: bold } /* Comment.Special */
.highlight .gd { color: #cd0000 } /* Generic.Deleted */
.highlight .ge { color: #cccccc; font-style: italic } /* Generic.Emph */
.highlight .gr { color: #FF0000 } /* Generic.Error */
.highlight .gh { color: #000080; font-weight: bold } /* Generic.Heading */
.highlight .gi { color: #00cd00 } /* Generic.Inserted */
.highlight .go { color: #888888 } /* Generic.Output */
.highlight .gp { color: #000080; font-weight: bold } /* Generic.Prompt */
.highlight .gs { color: #cccccc; font-weight: bold } /* Generic.Strong */
.highlight .gu { color: #800080; font-weight: bold } /* Generic.Subheading */
.highlight .gt { color: #0044DD } /* Generic.Traceback */
.highlight .kc { color: #cdcd00 } /* Keyword.Constant */
.highlight .kd { color: #00cd00 } /* Keyword.Declaration */
.highlight .kn { color: #cd00cd } /* Keyword.Namespace */
.highlight .kp { color: #cdcd00 } /* Keyword.Pseudo */
.highlight .kr { color: #cdcd00 } /* Keyword.Reserved */
.highlight .kt { color: #00cd00 } /* Keyword.Type */
.highlight .ld { color: #cccccc } /* Literal.Date */
.highlight .m { color: #cd00cd } /* Literal.Number */
.highlight .s { color: #cd0000 } /* Literal.String */
.highlight .na { color: #cccccc } /* Name.Attribute */
.highlight .nb { color: #cd00cd } /* Name.Builtin */
.highlight .nc { color: #00cdcd } /* Name.Class */
.highlight .no { color: #cccccc } /* Name.Constant */
.highlight .nd { color: #cccccc } /* Name.Decorator */
.highlight .ni { color: #cccccc } /* Name.Entity */
.highlight .ne { color: #666699; font-weight: bold } /* Name.Exception */
.highlight .nf { color: #cccccc } /* Name.Function */
.highlight .nl { color: #cccccc } /* Name.Label */
.highlight .nn { color: #cccccc } /* Name.Namespace */
.highlight .nx { color: #cccccc } /* Name.Other */
.highlight .py { color: #cccccc } /* Name.Property */
.highlight .nt { color: #cccccc } /* Name.Tag */
.highlight .nv { color: #00cdcd } /* Name.Variable */
.highlight .ow { color: #cdcd00 } /* Operator.Word */
.highlight .w { color: #cccccc } /* Text.Whitespace */
.highlight .mb { color: #cd00cd } /* Literal.Number.Bin */
.highlight .mf { color: #cd00cd } /* Literal.Number.Float */
.highlight .mh { color: #cd00cd } /* Literal.Number.Hex */
.highlight .mi { color: #cd00cd } /* Literal.Number.Integer */
.highlight .mo { color: #cd00cd } /* Literal.Number.Oct */
.highlight .sa { color: #cd0000 } /* Literal.String.Affix */
.highlight .sb { color: #cd0000 } /* Literal.String.Backtick */
.highlight .sc { color: #cd0000 } /* Literal.String.Char */
.highlight .dl { color: #cd0000 } /* Literal.String.Delimiter */
.highlight .sd { color: #cd0000 } /* Literal.String.Doc */
.highlight .s2 { color: #cd0000 } /* Literal.String.Double */
.highlight .se { color: #cd0000 } /* Literal.String.Escape */
.highlight .sh { color: #cd0000 } /* Literal.String.Heredoc */
.highlight .si { color: #cd0000 } /* Literal.String.Interpol */
.highlight .sx { color: #cd0000 } /* Literal.String.Other */
.highlight .sr { color: #cd0000 } /* Literal.String.Regex */
.highlight .s1 { color: #cd0000 } /* Literal.String.Single */
.highlight .ss { color: #cd0000 } /* Literal.String.Symbol */
.highlight .bp { color: #cd00cd } /* Name.Builtin.Pseudo */
.highlight .fm { color: #cccccc } /* Name.Function.Magic */
.highlight .vc { color: #00cdcd } /* Name.Variable.Class */
.highlight .vg { color: #00cdcd } /* Name.Variable.Global */
.highlight .vi { color: #00cdcd } /* Name.Variable.Instance */
.highlight .vm { color: #00cdcd } /* Name.Variable.Magic */
.highlight .il { color: #cd00cd } /* Literal.Number.Integer.Long */
</STYLE>
</HEAD>
<BODY>
<CENTER><NOBR><PRE>[ <a href="../index.html">Back to the main page</a> ]


<u>Python Syntax Highlighter for adam.szieberth.hu</u>                 

I finished with  a Python script  which makes me able to  easily
add syntax highlighted Python code to my pages.                 

This was a preparation step, as there are some Python scripts on
the line to be shared soon!                                     

The following code highlighted itself:                          

--[ <a href="http://raw.githubusercontent.com/SzieberthAdam/SzieberthAdam.github.io/master/code/py/syntax_py.py">syntax_py.py</a> ]------================================================================------------------------

<div class="highlight"><pre><span></span><span class="sd">&quot;&quot;&quot;</span>                                                                                                             
<span class="sd">syntax_py.py</span>                                                                                                    
<span class="sd">2021 Szieberth Ádám - Public Domain</span>                                                                             

<span class="sd">This script does the Python code syntax highlighting for Szieberth Ádám&#39;s</span>                                       
<span class="sd">personal webpage. As all the text content there are rendered with a monospaced</span>                                  
<span class="sd">font and are centered, all lines should have the same width to assure alignment.</span>                                

<span class="sd">The script does the syntax highlighting and it also adds the necessary number of</span>                                
<span class="sd">spaces to the end of each line.</span>                                                                                 

<span class="sd">Usage:</span>                                                                                                          

<span class="sd">python syntax_py.py [textwidth] [nohighlight] &lt;mypyfile&gt;</span>                                                        

<span class="sd">Output goes to &quot;&lt;mypyfile&gt;.html&quot;.</span>                                                                               

<span class="sd">Notes:</span>                                                                                                          

<span class="sd">* `pygments` Python module must be installed.</span>                                                                   
<span class="sd">&quot;&quot;&quot;</span>                                                                                                             

<span class="k">try</span><span class="p">:</span>                                                                                                            
    <span class="kn">import</span> <span class="nn">pygments</span>                                                                                             
<span class="k">except</span> <span class="ne">ImportError</span><span class="p">:</span>                                                                                             
    <span class="n">pygments</span> <span class="o">=</span> <span class="kc">None</span>                                                                                             
<span class="k">else</span><span class="p">:</span>                                                                                                           
    <span class="kn">from</span> <span class="nn">pygments.lexers</span> <span class="kn">import</span> <span class="n">PythonLexer</span>                                                                     
    <span class="kn">from</span> <span class="nn">pygments.formatters</span> <span class="kn">import</span> <span class="n">HtmlFormatter</span>                                                               

<span class="kn">import</span> <span class="nn">pathlib</span>                                                                                                  
<span class="kn">import</span> <span class="nn">sys</span>                                                                                                      

<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&quot;__main__&quot;</span><span class="p">:</span>                                                                                      

    <span class="n">options</span> <span class="o">=</span> <span class="p">{</span><span class="s2">&quot;nohighlight&quot;</span><span class="p">:</span> <span class="kc">False</span><span class="p">}</span>                                                                            

    <span class="k">if</span> <span class="n">pygments</span> <span class="ow">is</span> <span class="kc">None</span><span class="p">:</span>                                                                                        
        <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39;ERROR! Third party module `pygments` is missing.&#39;</span><span class="p">)</span>                                              
        <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39;Hint: You can install it by calling `pip install pygments`.&#39;</span><span class="p">)</span>                                   
        <span class="nb">print</span><span class="p">(</span><span class="vm">__doc__</span><span class="p">)</span>                                                                                          
        <span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>                                                                                             

    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">2</span> <span class="ow">or</span> <span class="ow">not</span> <span class="n">pathlib</span><span class="o">.</span><span class="n">Path</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span><span class="o">.</span><span class="n">is_file</span><span class="p">():</span>                                           
        <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39;ERROR! Path of a (Python) file is assumed as last argument.&#39;</span><span class="p">)</span>                                   
        <span class="nb">print</span><span class="p">(</span><span class="vm">__doc__</span><span class="p">)</span>                                                                                          
        <span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>                                                                                             

    <span class="n">textwidth</span> <span class="o">=</span> <span class="kc">None</span>                                                                                            
    <span class="k">for</span> <span class="n">s</span> <span class="ow">in</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">:</span><span class="o">-</span><span class="mi">1</span><span class="p">]:</span>                                                                                    
        <span class="k">if</span> <span class="n">s</span><span class="o">.</span><span class="n">isdecimal</span><span class="p">():</span>                                                                                       
            <span class="n">textwidth</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>                                                                                  
        <span class="k">elif</span> <span class="n">s</span> <span class="ow">in</span> <span class="n">options</span><span class="p">:</span>                                                                                      
            <span class="n">options</span><span class="p">[</span><span class="n">s</span><span class="p">]</span> <span class="o">=</span> <span class="kc">True</span>                                                                                   
        <span class="k">else</span><span class="p">:</span>                                                                                                   
            <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39;ERROR! invalid argument: &quot;</span><span class="si">{</span><span class="n">s</span><span class="si">}</span><span class="s1">&quot;.&#39;</span><span class="p">)</span>                                                           
            <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39;Hint: Expected an integer textwidth or any of the following options:&#39;</span><span class="p">)</span>                      
            <span class="k">for</span> <span class="n">so</span> <span class="ow">in</span> <span class="n">options</span><span class="p">:</span>                                                                                  
                <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39;      * </span><span class="si">{</span><span class="n">so</span><span class="si">}</span><span class="s1">&#39;</span><span class="p">)</span>                                                                          
            <span class="nb">print</span><span class="p">(</span><span class="vm">__doc__</span><span class="p">)</span>                                                                                      
            <span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span>                                                                                         

    <span class="n">p</span> <span class="o">=</span> <span class="n">pathlib</span><span class="o">.</span><span class="n">Path</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span><span class="o">.</span><span class="n">resolve</span><span class="p">()</span>                                                                    
    <span class="n">pext</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="n">suffix</span><span class="o">.</span><span class="n">strip</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">)</span>                                                                                  

    <span class="k">with</span> <span class="n">p</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="s2">&quot;r&quot;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s2">&quot;utf-8&quot;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>                                                                    
        <span class="n">a</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>                                                                                            

    <span class="n">alinelens</span> <span class="o">=</span> <span class="p">[</span><span class="nb">len</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="k">for</span> <span class="n">s</span> <span class="ow">in</span> <span class="n">a</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)]</span>                                                                 
    <span class="n">maxalinelens</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="n">alinelens</span><span class="p">)</span>                                                                               
    <span class="n">textwidth</span> <span class="o">=</span> <span class="n">textwidth</span> <span class="ow">or</span> <span class="n">maxalinelens</span>                                                                       
    <span class="k">if</span> <span class="n">textwidth</span> <span class="o">&lt;</span> <span class="n">maxalinelens</span> <span class="p">:</span>                                                                               
        <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;ERROR! Too low textwidth size!&quot;</span><span class="p">)</span>                                                                 
        <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39;Hint: Its minimum is the highest column number which is </span><span class="si">{</span><span class="n">maxalinelens</span><span class="si">}</span><span class="s1">.&#39;</span><span class="p">)</span>                       
        <span class="nb">print</span><span class="p">(</span><span class="vm">__doc__</span><span class="p">)</span>                                                                                          
        <span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>                                                                                             

    <span class="k">if</span> <span class="ow">not</span> <span class="n">options</span><span class="p">[</span><span class="s2">&quot;nohighlight&quot;</span><span class="p">]:</span>                                                                              
        <span class="n">a</span> <span class="o">=</span> <span class="n">pygments</span><span class="o">.</span><span class="n">highlight</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">PythonLexer</span><span class="p">(),</span> <span class="n">HtmlFormatter</span><span class="p">())</span>                                               

    <span class="n">a</span> <span class="o">=</span> <span class="n">a</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)</span>                                                                                           
    <span class="n">result</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">s</span> <span class="o">+</span> <span class="p">(</span><span class="s2">&quot; &quot;</span><span class="o">*</span><span class="p">(</span><span class="n">textwidth</span><span class="o">-</span><span class="n">w</span><span class="p">)</span> <span class="k">if</span> <span class="n">w</span> <span class="k">else</span> <span class="s2">&quot;&quot;</span><span class="p">)</span> <span class="k">for</span> <span class="n">s</span><span class="p">,</span> <span class="n">w</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">alinelens</span><span class="p">))</span>                      

    <span class="n">po</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="n">parent</span> <span class="o">/</span> <span class="sa">f</span><span class="s1">&#39;</span><span class="si">{</span><span class="n">p</span><span class="o">.</span><span class="n">stem</span><span class="si">}</span><span class="s1">.</span><span class="si">{</span><span class="n">pext</span><span class="si">}</span><span class="s1">.html&#39;</span>                                                                     

    <span class="k">with</span> <span class="n">po</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="s2">&quot;w&quot;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s2">&quot;utf-8&quot;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>                                                                   
        <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>                                                                                         
</pre></div>
------------------------================================================================------------------------

For the moment  I use the  <a href="https://github.com/richleland/pygments-css">vim</a> style  which is fine  for now but
will  likely to get changed in the future  as soon as I progress
with my color vision defficiency palette project.               

Stay tuned.                                                     

</PRE></NOBR></CENTER>
</BODY>
</HTML>
